AWSTemplateFormatVersion: 2010-09-09
Description: CFN template for Amazon Sagemaker Dristributed Training with Data Parallel on TensorFlow-2.4.1

Mappings:
  CidrMappings:
    vpc:
      CIDR: 10.0.0.0/16
    private-subnet:
      CIDR: 10.0.2.0/24
  RegionMap: 
    us-east-1: 
      datascience: "arn:aws:sagemaker:us-east-1:081325390199:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:us-east-1:663277389841:image/sagemaker-data-wrangler-1.0"
    us-east-2:
      datascience: "arn:aws:sagemaker:us-east-2:429704687514:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:us-east-2:415577184552:image/sagemaker-data-wrangler-1.0"      
    us-west-1: 
      datascience: "arn:aws:sagemaker:us-west-1:742091327244:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:us-west-1:926135532090:image/sagemaker-data-wrangler-1.0"
    us-west-2: 
      datascience: "arn:aws:sagemaker:us-west-2:236514542706:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:us-west-2:174368400705:image/sagemaker-data-wrangler-1.0"
    af-south-1:
      datascience: "arn:aws:sagemaker:af-south-1:559312083959:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:af-south-1:143210264188:image/sagemaker-data-wrangler-1.0"    
    ap-east-1:
      datascience: "arn:aws:sagemaker:ap-east-1:493642496378:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:ap-east-1:707077482487:image/sagemaker-data-wrangler-1.0"
    ap-south-1:
      datascience: "arn:aws:sagemaker:ap-south-1:394103062818:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:ap-south-1:089933028263:image/sagemaker-data-wrangler-1.0"  
    ap-northeast-2:
      datascience: "arn:aws:sagemaker:ap-northeast-2:806072073708:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:ap-northeast-2:131546521161:image/sagemaker-data-wrangler-1.0"
    ap-southeast-1:
      datascience: "arn:aws:sagemaker:ap-southeast-1:492261229750:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:ap-southeast-1:119527597002:image/sagemaker-data-wrangler-1.0"      
    ap-southeast-2:
      datascience: "arn:aws:sagemaker:ap-southeast-2:452832661640:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:ap-southeast-2:422173101802:image/sagemaker-data-wrangler-1.0"
    ap-northeast-1: 
      datascience: "arn:aws:sagemaker:ap-northeast-1:102112518831:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:ap-northeast-1:649008135260:image/sagemaker-data-wrangler-1.0"
    ca-central-1:
      datascience: "arn:aws:sagemaker:ca-central-1:310906938811:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:ca-central-1:557239378090:image/sagemaker-data-wrangler-1.0"
    eu-central-1: 
      datascience: "arn:aws:sagemaker:eu-central-1:936697816551:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:eu-central-1:024640144536:image/sagemaker-data-wrangler-1.0"
    eu-west-1:
      datascience: "arn:aws:sagemaker:eu-west-1:470317259841:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:eu-west-1:245179582081:image/sagemaker-data-wrangler-1.0"
    eu-west-2:
      datascience: "arn:aws:sagemaker:eu-west-2:712779665605:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:eu-west-2:894491911112:image/sagemaker-data-wrangler-1.0"
    eu-west-3:
      datascience: "arn:aws:sagemaker:eu-west-3:615547856133:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:eu-west-3:807237891255:image/sagemaker-data-wrangler-1.0"
    eu-north-1:
      datascience: "arn:aws:sagemaker:eu-north-1:243637512696:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:eu-north-1:054986407534:image/sagemaker-data-wrangler-1.0"
    eu-south-1:
      datascience: "arn:aws:sagemaker:eu-south-1:488287956546:image/sagemaker-data-wrangler-1.0"
      datawrangler: "arn:aws:sagemaker:eu-south-1:592751261982:image/datascience-1.0"
    sa-east-1:
      datascience: "arn:aws:sagemaker:sa-east-1:782484402741:image/datascience-1.0"
      datawrangler: "arn:aws:sagemaker:sa-east-1:424196993095:image/sagemaker-data-wrangler-1.0"


Metadata:
  Author:
    Description: Deep Engines Team
  License:
    Description: >-
      Copyright 2021 Amazon.com, Inc. and its affiliates. All Rights Reserved.

      Licensed under the Amazon Software License (the "License"). You may not
      use this file except in compliance with the License. A copy of the License
      is located at

      http://aws.amazon.com/asl/

      or in the "license" file accompanying this file. This file is distributed
      on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
      express or implied. See the License for the specific language governing
      permissions and limitations under the License.

Outputs:
  awsRegionId:
    Description: The AWS Region ID your template was launched in
    Value:
      Ref: 'AWS::Region'
  privateSubnet:
    Description: Private subnet
    Value:
      Ref: privateSubnet
  vpc:
    Description: The VPC
    Value:
      Ref: vpc
  vpcSecurityGroup:
    Description: vpc security group
    Value: 
      Ref: instanceSecurityGroup
  instanceRole:
    Description: Instance Role
    Value:
      Ref: instanceRole
  FileSystemId:
    Description: FSx Lustre FS ID
    Value: !Ref S3LinkedLustreFS 
  S3Endpoint:
    Description: VPC Endpoint for S3
    Value: !Ref S3Endpoint
  SageMakerStudioDomainId:
    Description: SageMaker Studio domain id
    Value: !GetAtt SageMakerStudioDomain.DomainId
  UserProfileName:
    Description: SageMaker user profile name
    Value: !Ref UserProfileName

Parameters:
  DomainName:
    Type: String
  UserProfileName:
    Type: String
  sourceCidr:
    Default: 0.0.0.0/0
    Description: Optional - CIDR/IP range for access
    Type: String
  NotebookName:
    Type: String
    Default: TF-DDP-Workshop-FSx
    Description: Enter the name of the SageMaker notebook instance.
  VolumeSize:
    Type: Number
    Default: 100
    MinValue: 5
    MaxValue: 16384
    ConstraintDescription: Must be an integer between 5 (GB) and 16384 (16 TB).
    Description: Enter the size of the EBS volume in GB.
  NotebookInstanceType:
     Type: String
     Default: ml.t2.xlarge
     Description: Enter the SageMaker notebook instance type.
  PublicS3Bucket:
     Type: String
     Default: 's3://ee-assets-prod-us-east-1/modules/75e5dde6cf204eedb24191ad8240656f/v1/coco_dataset'
     Description: Public S3 bucket for coco dataset
  ShouldCreateBucketInputParameter:  
    Type: String
    AllowedValues: ["True", "False"]
    Default: "True"
    Description: Select True if you want to create S3 bucket, else select False to keep the existing default bucket
  NetworkAccessType:
    Type: String
    AllowedValues:
      - 'PublicInternetOnly'
      - 'VpcOnly'
    Description: Choose how SageMaker Studio accesses resources over the Network
    Default: 'VpcOnly'
  AuthMode:
    Type: String
    AllowedValues:
      - 'IAM'
      - 'SSO'
    Description: The mode of authentication that members use to access the domain
    Default: 'IAM'
  SageMakerStudioStorageKMSKeyId:
    Type: String
    Description: SageMaker uses an AWS KMS key to encrypt your EFS and EBS file systems by default. To use a customer managed key, enter its key Id.
    Default: ''
  StartKernelGatewayApps:
    Type: String
    Description: Start the KernelGateway Apps (Data Science and Data Wrangler)
    AllowedValues:
      - 'YES'
      - 'NO'
    Default: 'NO'

Conditions:
  CreateS3Bucket:
    !Equals [!Ref ShouldCreateBucketInputParameter, "True"]
  SageMakerEFSKMSKeyCondition: !Not [ !Equals [ !Ref SageMakerStudioStorageKMSKeyId, ''] ]
  KernelGatewayAppsCondition: !Equals [ !Ref StartKernelGatewayApps, 'YES' ]
    
Resources:
  attachGateway:
    DependsOn:
      - vpc
      - internetGateway
    Properties:
      InternetGatewayId:
        Ref: internetGateway
      VpcId:
        Ref: vpc
    Type: 'AWS::EC2::VPCGatewayAttachment'
    
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Condition: CreateS3Bucket
    Properties:
        BucketName: !Sub 'sagemaker-${AWS::Region}-${AWS::AccountId}-9999'
        
  instanceRole:
    Description: Instance Role for Sagemaker and FsxLustre
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
                - "fsx.amazonaws.com"
                - "s3.data-source.lustre.fsx.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSageMakerFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/IAMFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonFSxFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonEC2FullAccess'

      RoleName: "tf2-sm-ddp2"
    Type: "AWS::IAM::Role"

  instanceSecurityGroup:
    DependsOn:
      - vpc
    Properties:
      GroupDescription: Allow 988 for Lustre
      SecurityGroupIngress:
        - CidrIp:
            Ref: sourceCidr
          FromPort: 988
          IpProtocol: tcp
          ToPort: 988
        - CidrIp: 0.0.0.0/0
          FromPort: 1021
          IpProtocol: tcp
          ToPort: 1021
        - CidrIp: 0.0.0.0/0
          FromPort: 1022
          IpProtocol: tcp
          ToPort: 1022
        - CidrIp: 0.0.0.0/0
          FromPort: 1023
          IpProtocol: tcp
          ToPort: 1023
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          FromPort: 7592
          IpProtocol: tcp
          ToPort: 7592
        - CidrIp: 0.0.0.0/0
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: 988
          IpProtocol: tcp
          ToPort: 988
        - CidrIp: 0.0.0.0/0
          FromPort: 1021
          IpProtocol: tcp
          ToPort: 1021
        - CidrIp: 0.0.0.0/0
          FromPort: 1022
          IpProtocol: tcp
          ToPort: 1022
        - CidrIp: 0.0.0.0/0
          FromPort: 1023
          IpProtocol: tcp
          ToPort: 1023
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22 
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80 
        - CidrIp: 0.0.0.0/0
          FromPort: 7592
          IpProtocol: tcp
          ToPort: 7592
        - CidrIp: 0.0.0.0/0
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      VpcId:
        Ref: vpc
    Type: 'AWS::EC2::SecurityGroup'

  privateSubnet:
    DependsOn: attachGateway
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::FindInMap:
        - CidrMappings
        - private-subnet
        - CIDR
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: private subnet
      VpcId:
        Ref: vpc
    Type: AWS::EC2::Subnet
      
  internetGateway:
    DependsOn:
      - vpc
    Type: 'AWS::EC2::InternetGateway'
    
  privateRouteTable:
    DependsOn:
      - vpc
    Properties:
      Tags:
        - Key: Name
          Value: private route table
      VpcId:
        Ref: vpc
    Type: 'AWS::EC2::RouteTable'

  privateSubnet1RouteTableAssociation:
    DependsOn:
    - privateRouteTable
    - privateSubnet
    Properties:
      RouteTableId:
        Ref: privateRouteTable
      SubnetId:
        Ref: privateSubnet
    Type: AWS::EC2::SubnetRouteTableAssociation
     
  publicRoute:
    DependsOn:
      - privateRouteTable
      - internetGateway
      - attachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: internetGateway
      RouteTableId:
        Ref: privateRouteTable
    Type: 'AWS::EC2::Route'
    
  vpc:
    Properties:
      CidrBlock:
        'Fn::FindInMap':
          - CidrMappings
          - vpc
          - CIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: VPC
    Type: 'AWS::EC2::VPC'

  NotebookLifecycle:
    Type: 'AWS::SageMaker::NotebookInstanceLifecycleConfig'
    Properties:
      NotebookInstanceLifecycleConfigName: jupyter-lifecycle-config
      OnStart:
        - Content:
            'Fn::Base64': !Sub |
              #!/bin/bash
              set -e
              FILE="/home/ec2-user/SageMaker/tf-ddp-workshop"
              echo "--- before clone ---"
              if test -d "$FILE"; then
                echo "$FILE exists."
              else
                git clone -b master "https://github.com/mullue/tf2-sm-ddp.git" /home/ec2-user/SageMaker/tf-ddp-workshop
                ls -al
                whoami
              fi
              echo "--- after clone ---"
              chown ec2-user -R $FILE
              echo "--- check the owner of resoruces! ---"
              ls -al $FILE
              echo "-----Sync of coco dataset from S3 public bucket----"
              ##sync
              nohup aws s3 sync ${PublicS3Bucket}/train s3://sagemaker-${AWS::Region}-${AWS::AccountId}/coco_dataset/train/ &
              nohup aws s3 sync ${PublicS3Bucket}/model s3://sagemaker-${AWS::Region}-${AWS::AccountId}/coco_dataset/model/ &
              nohup aws s3 sync ${PublicS3Bucket}/annotations s3://sagemaker-${AWS::Region}-${AWS::AccountId}/coco_dataset/annotations/ &
              #cd $FILE
              #nohup aws s3 cp ${PublicS3Bucket}/tf2-mask-rcnn-ddp2.tar.gz ./tf2-mask-rcnn-ddp2.tar.gz &
              #docker image load -i tf2-mask-rcnn-ddp2.tar.gz
                    
  NotebookInstance:
    DependsOn:
      - S3Bucket
    Type: 'AWS::SageMaker::NotebookInstance'
    Properties:
      InstanceType: !Ref NotebookInstanceType
      NotebookInstanceName: !Ref NotebookName
      SubnetId: !Ref privateSubnet
      SecurityGroupIds: 
        - !Ref instanceSecurityGroup
      RoleArn: !GetAtt instanceRole.Arn
      VolumeSizeInGB: !Ref VolumeSize
      LifecycleConfigName: !GetAtt NotebookLifecycle.NotebookInstanceLifecycleConfigName

  SageMakerStudioDomain:
    Type: AWS::SageMaker::Domain
    Properties: 
      AppNetworkAccessType: !Ref NetworkAccessType
      AuthMode: !Ref AuthMode
      DefaultUserSettings: 
          ExecutionRole: !GetAtt instanceRole.Arn
          SecurityGroups: [!Ref instanceSecurityGroup]
      DomainName: !Ref DomainName 
      KmsKeyId: !If [ SageMakerEFSKMSKeyCondition, !Ref SageMakerStudioStorageKMSKeyId, !Ref 'AWS::NoValue' ]
      SubnetIds: [!Ref privateSubnet]
      VpcId: !Ref vpc

  SageMakerUserProfile:
    Type: AWS::SageMaker::UserProfile
    Properties: 
      DomainId: !GetAtt SageMakerStudioDomain.DomainId
      UserProfileName: !Ref UserProfileName
      UserSettings:
        ExecutionRole: !GetAtt instanceRole.Arn
        SecurityGroups: [!Ref instanceSecurityGroup]

  JupyterApp:
    Type: AWS::SageMaker::App
    DependsOn: SageMakerUserProfile
    Properties: 
      AppName: default
      AppType: JupyterServer
      DomainId: !GetAtt SageMakerStudioDomain.DomainId
      UserProfileName: !Ref UserProfileName

  DataScienceApp:
    Type: AWS::SageMaker::App
    DependsOn: SageMakerUserProfile
    Condition: KernelGatewayAppsCondition
    Properties: 
      AppName: instance-event-engine-datascience-ml-t3-medium
      AppType: KernelGateway
      DomainId: !GetAtt SageMakerStudioDomain.DomainId
      ResourceSpec: 
        InstanceType:  ml.t3.medium
        SageMakerImageArn: !FindInMap
          - RegionMap
          - !Ref 'AWS::Region'
          - datascience
      UserProfileName: !Ref UserProfileName
  
  S3LinkedLustreFS:
    DependsOn:
      - instanceSecurityGroup
      - privateSubnet
      - S3Bucket
    Type: AWS::FSx::FileSystem
    Properties:
      FileSystemType: "LUSTRE"
      StorageCapacity: 1200
      SubnetIds: [!Ref privateSubnet]
      SecurityGroupIds: [!Ref instanceSecurityGroup]
      Tags:
        - Key: "Name"
          Value: "TF-DDP-Workshop"
      LustreConfiguration:
        AutoImportPolicy: "NEW"
        CopyTagsToBackups: true
        DeploymentType: "PERSISTENT_1"
        PerUnitStorageThroughput: 200
        DataCompressionType: "NONE"
        ImportPath: !Sub s3://sagemaker-${AWS::Region}-${AWS::AccountId}
        ExportPath: !Sub s3://sagemaker-${AWS::Region}-${AWS::AccountId}/.
  
  S3Endpoint:
    DependsOn:
      - vpc
      - privateSubnet
      - privateRouteTable
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: '*'
            Resource: '*'
      RouteTableIds:
        - !Ref privateRouteTable
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref vpc
        
